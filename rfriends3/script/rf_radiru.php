<?php
 function radiru_disp($msg,$para,$ex_type) { $fnm = get_fnam($para, $ex_type); $title = $para[7]; $kw = $para[10]; if (strlen($fnm) < 30) { $fnm = mb_substr($fnm . "          ", 0, 30); } $rsv_msg = mb_substr($msg . "      ", 0, 6); echo_prn(1, " $rsv_msg $fnm $title [$kw]"); } function rf_sch_radiru($ymd, $areakey, $netch) { global $radiru_prog_url_json; global $radiru_apikey; global $radiru_prog_retry; global $radiru_prog_wait; $url = sprintf($radiru_prog_url_json,$areakey,$netch,$ymd); $tmp = rf_sch_radiru_url($url,$radiru_prog_retry,$radiru_prog_wait); if ($tmp === false) { echo_prn(1, "error or not delivered : $url"); } else { echo_prn(1, "get json : $url"); } return $tmp; } function rf_sch_radiru_url($url,$rty,$wt) { for ($i=0;$i<$rty;$i++) { $json = @file_get_contents($url); if ($json !== false) { $ret = @gzdecode($json); if ($ret !== false) $json = $ret; $tmp = @json_decode($json, true); if (!is_null($tmp)) {; return $json; } else { $n = strlen($json); echo_prn(2,"json_decode error len:$n url:$url"); } } sleep($wt); } return false; } function rf_get_schedule_radiru_batch($dt, $n, $areakey, $netch, $flg) { global $schdir; global $sch_life_time; $tm = time(); $exp = 3600 * 24 * 9; $pat = $schdir."*_*_*.json"; rf_sch_expire_radiru(0, $tm, $exp, $pat, 0); $sch_life_time2 = $sch_life_time * 12; $files = array(); for ($i = 0; $i < $n; $i++) { $dt1 = strtotime("$i day", $dt); $ymd = date("Y-m-d", $dt1); $fnm = sprintf("%s_%s_%s.json", $ymd, $areakey, $netch); $fn = $schdir.$fnm; $files[] = $fn; if (file_exists($fn)) { $ft = filemtime($fn); $df = $tm - $ft; } else { $df = $sch_life_time2; } if ($flg == 1) { $df = $sch_life_time2; } if ($df >= $sch_life_time2 || $df < 0) { $tmp = rf_sch_radiru($ymd, $areakey, $netch); if ($tmp !== false) { file_put_contents($fn, $tmp, LOCK_EX); } else { echo_prn(1,"program table get error : $fnm"); } } } } function rf_get_schedule_radiru_remain($dt, $n, $areakey, $netch, $flg) { global $schdir; global $sch_life_time; $tm = time(); $exp = 3600 * 24 * 9; $pat = $schdir."*_*_*.json"; rf_sch_expire_radiru(0, $tm, $exp, $pat, 0); $sch_life_time2 = $sch_life_time * 12; $files = array(); for ($i = 0; $i < $n; $i++) { $dt1 = strtotime("$i day", $dt); $ymd = date("Y-m-d", $dt1); $fnm = sprintf("%s_%s_%s.json", $ymd, $areakey, $netch); $fn = $schdir.$fnm; if (file_exists($fn)) { $ft = filemtime($fn); $df = $tm - $ft; } else { $df = $sch_life_time2; } if ($flg == 1) { $df = $sch_life_time2; } if ($df >= $sch_life_time2 || $df < 0) { $files[] = $fnm; } } return $files; } function rf_get_schedule_radiru($dt, $n, $areakey, $netch, $flg) { global $schdir; global $sch_life_time; $tm = time(); $exp = 3600 * 24 * 9; $pat = $schdir."*_*_*.json"; rf_sch_expire_radiru(0, $tm, $exp, $pat, 0); $sch_life_time2 = $sch_life_time * 12; $files = array(); for ($i = 0; $i < $n; $i++) { $dt1 = strtotime("$i day", $dt); $ymd = date("Y-m-d", $dt1); $fnm = sprintf("%s_%s_%s.json", $ymd, $areakey, $netch); $fn = $schdir.$fnm; $files[] = $fn; if (file_exists($fn)) { $ft = filemtime($fn); $df = $tm - $ft; } else { $df = $sch_life_time2; } if ($flg == 1) { $df = $sch_life_time2; } if ($df >= $sch_life_time2 || $df < 0) { $tmp = rf_sch_radiru($ymd, $areakey, $netch); if ($tmp !== false) { file_put_contents($fn, $tmp, LOCK_EX); } else { echo_prn(1,"program table get error : $fnm"); } } } $json = array(); foreach($files as $fn) { if (file_exists($fn)) { $tmp = file_get_contents($fn); $json_tmp = json_decode($tmp, true); if (!is_null($json_tmp)) { $dt = date("Y/m/d H:i:s",filemtime($fn)); $fnprn = sprintf("%s  %s %8d",basename($fn),$dt,filesize($fn)); echo_prn(1,$fnprn); $json[] = $json_tmp; } else { echo_prn(1,basename($fn)." error"); } } } return $json; } function rf_program_radiru($dt,$cnt,$areakey, $netch) { global $schdir; for ($i=0;$i<$cnt;$i++) { $dt1 = strtotime("$i day", $dt); $ymd = date("Y-m-d", $dt1); $fnm = sprintf("%s_%s_%s.json", $ymd, $areakey, $netch); $fn = $schdir.$fnm; $tmp = rf_sch_radiru($ymd, $areakey, $netch); if ($tmp !== false) { $ret = file_put_contents($fn, $tmp, LOCK_EX); if ($ret === false ) { } } else { } } return; } function rf_get_config_radiru() { global $schdir; global $tmpdir; global $cfg_life_time; global $radiru_prog_url_json; global $radiru_configurl; global $radiru_prog_retry; global $radiru_prog_wait; $config_web = $tmpdir."config_web.xml"; $url = array(); for ($i=0;$i<$radiru_prog_retry;$i++) { $tmp = @file_get_contents($radiru_configurl); if ($tmp !== false) break; echo_msg(2,"busy radiru"); sleep($radiru_prog_wait); } if ($tmp === false) { echo_prn(1, "get error (config_web.xml)"); if (!file_exists($config_web)) return $url; echo_prn(1, "use backup (config_web.xml)"); $tmp = @file_get_contents($config_web); } $tmp2 = str_replace(array("\r","\n","\t"), '', $tmp); $xml = @simplexml_load_string($tmp2); if ($xml === false) { echo_prn(1, "xml error (config_web.xml)"); return $url; } $ret = file_put_contents($config_web,$tmp); $xpathkey = "//stream_url/data"; $dat = $xml->xpath($xpathkey); foreach ($dat as $st) { $station_xml = simplexml_load_string($st->asXml()); $area = $station_xml->area; $url["$area"] = $station_xml; } $pday1 = $xml->url_program_day; $pday2 = str_replace("{area}", '%1$s',$pday1); $pday3 = str_replace("{service}", '%2$s',$pday2); $pday4 = str_replace("[YYYY-MM-DD]",'%3$s',$pday3); $radiru_prog_url_json = "https:".$pday4; return $url; } function radiru_rsv_ex_s($kwdat,$kwdat_ng, $dt1, $cnt, $nk, $parea, $netch, $rsvcnt) { global $dlmt; global $rsv_max; $url_xml = rf_get_config_radiru(); $area = (string)$parea; $ch2 = $url_xml[$area]->areakey; $ch2en = $url_xml[$area]->area; $sect = "unknown"; $keyw = $kwdat; $keyw_num = count_73($keyw); $xml = rf_get_schedule_radiru($dt1, $cnt, $ch2, $netch, 0); $nw = time(); $nwe = $nw + $nk * 3600 + 600; $ttl = 0; $skp = 0; $rsvdata = array(); $k = -1; foreach($xml as $js) { $k++; $js2 = $js["list"]; if (count_73($js2) < 1) { echo_msg_temp(2, "schedule not found $ch2 $k"); continue; } $cnt2 = count_73($js["list"]["$netch"]); for ($i=0; $i<$cnt2; $i++) { $st = $js["list"]["$netch"][$i]; $ft = $st["start_time"]; $ftt = strtotime($ft); if (($nk > 0) && ($ftt < $nw)) { continue; } if (($nk > 0) && ($ftt > $nwe)) { continue; } $ttl++; $title = $st["title"]; $artist = $st["act"]; $desc = $st["subtitle"]; $info = $st["content"]; $ch = $st["service"]["id"]; $free = $st["free"]; $music = $st["music"]; $genre = rf_get_radiru_genre($st); $ft2 = strtotime($ft); $week_n = array("SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"); $ft3 = $week_n[date("w",$ft2)]; $prog_radiru = array( "ch" => "$ch", "title" => "$title", "artist" => "$artist", "desc" => "$desc", "info" => "$info", "time" => "$ft", "day" => "$ft3", "music" => "$music", "genre" => "$genre", ); $hit = rf_hit($st,$prog_radiru,$keyw,$kwdat_ng); if ($hit == "") { continue; } $kw = $hit; $to = $st["end_time"]; $prog_id= $st["event_id"]; $failed_record = 0; $in_ng = 0; $out_ng = 0; $img = ""; $imgm = ""; if ($st["images"]["logo_l"] != null) { $img = $st["images"]["logo_l"]["url"]; } if ($st["images"]["thumbnail_m"] != null) { $imgm = $st["images"]["thumbnail_m"]["url"]; } if ($img == "") $img = $imgm; $title = fn_edit($title); $artist = fn_edit($artist); if ($artist == "") { $artist = $dlmt; } if ($img == "" || $img == null) { $img = $dlmt; } $chx = $ch . "_" . $ch2en; if ($ch == "r2" || $ch2en == "tokyo") { $chx = $ch; } $ft = date("YmdHis", strtotime($ft)); $to = date("YmdHis", strtotime($to)); $dur = sprintf("%05d", strtotime($to) - strtotime($ft)); $musiclist = fn_edit($music); $wdata = rf_make_wdata($ft, $to, $dur, $failed_record, $in_ng, $out_ng, $chx, $title, $artist, $img, $kw, $prog_id, $dlmt, $dlmt, $dlmt, $dlmt, $genre, $dlmt, $musiclist); $idx = $chx."_".$ft."_".$title; if (!array_key_exists($idx, $rsvdata)) { $rsvdata[$idx] = $wdata; $rsvcnt++; if ($rsvcnt >= $rsv_max) { echo_msg_temp(1,"Reservation over ( >= $rsv_max )"); break 2; } } else { } } } return $rsvdata; } function radiru_rsv_ex($kwdat,$kwdat_ng, $dt1, $cnt, $nk, $parea, $chlist) { global $rsv_max; global $ex_radiru; global $rsvdir; $pat = "{*.bat,*.sh,*.dat}"; $rsv_n = 1; $ret = clear_log_hour($rsv_n, $rsvdir, $pat, 1, 0, 1); $rsvcnt = 0; $rsvdata = array(); foreach ($chlist as $netch) { if (!valid_chk($ex_radiru, $netch)) { continue; } $rd = radiru_rsv_ex_s($kwdat,$kwdat_ng, $dt1, $cnt, $nk, $parea, $netch, $rsvcnt); $rsvdata = array_merge($rsvdata, $rd); $rsvcnt += count_73($rd); } return $rsvdata; } function radiru_hls_url($channel) { global $radiru_r1; global $radiru_r2; global $radiru_r3; global $radiru_area_1; $chx = explode("_", $channel); if (count_73($chx) <= 1) { $ch = $channel; $area = $radiru_area_1; } else { $ch = "$chx[0]"; $area = "$chx[1]"; } $url_xml = rf_get_config_radiru(); if (!array_key_exists($area, $url_xml)) { echo_msg(2, "radiru_hls_url(area) : $area not found"); return null; } $ch = strtolower($ch); switch ($ch) { case $radiru_r1: $hlsurl = $url_xml[$area]->r1hls; break; case $radiru_r2: $hlsurl = $url_xml[$area]->r2hls; break; case $radiru_r3: $hlsurl = $url_xml[$area]->fmhls; break; default: echo_msg(2, "radiru_hls_url(ch) : $ch not found"); $hlsurl = null; break; } echo_prn(1, "$channel [$ch][$area][$hlsurl] "); return $hlsurl; } function get_radiru_callsign_new($channel) { global$radiru_callsign_db; $ch = strtolower($channel); if ($ch == "fm") $ch = "r3"; if (array_key_exists($ch,$radiru_callsign_db)) { $ch_cs = $radiru_callsign_db[$ch]; } else { $ch_cs = $ch; } return $ch_cs; } function get_radiru_callsign($channel) { global $radiru_callsign_r1; global $radiru_callsign_r2; global $radiru_callsign_fm; global $radiru_ch; global $radiru_r1; global $radiru_r2; global $radiru_r3; global $radiru_area_1; $chx = explode("_", $channel); $ch = $chx[0]; if (count_73($chx) <= 1) { $area = $radiru_area_1; } else { $area = $chx[1]; } switch ($ch) { case $radiru_r1: $ch_cs = $radiru_callsign_r1[$area]; break; case $radiru_r2: $ch_cs = $radiru_callsign_r2; break; case $radiru_r3: $ch_cs = $radiru_callsign_r1[$area].$radiru_callsign_fm; break; default: $ch_cs = "UNKNOWN"; break; } return $ch_cs; } function rf_radiru_station() { $url_xml = rf_get_config_radiru(); $stationdata = array(); foreach ($url_xml as $key => $val) { $ch = "$key"; $chname = $url_xml[$key]->areajp; $stationdata[$ch] = "$chname"; } return $stationdata; } function rf_radiru_station_all() { global $radiru_ch; global $radiru_ch_2; $stationdata = $radiru_ch; $sta = rf_radiru_station(); foreach ($sta as $key => $val) { foreach ($radiru_ch_2 as $key2) { $stationdata[] = $key2."_".$key; } } return $stationdata; } function rf_nhk_list() { global $radiru_ch; global $ex_radiru; $nhk_ch = array(); foreach ($radiru_ch as $key) { if (!valid_chk($ex_radiru, $key)) { continue; } if ($key == "r1") $nhk_ch[] = 5; if ($key == "r2") $nhk_ch[] = 6; if ($key == "r3") $nhk_ch[] = 7; } return $nhk_ch; } function rf_nhk_list_chkbox($sch) { global $radiru_ch; global $ex_radiru; $nhk_ch = array(); foreach ($sch as $key) { if (!valid_chk($ex_radiru, $key)) { continue; } if ($key == "r1") $nhk_ch[] = 5; if ($key == "r2") $nhk_ch[] = 6; if ($key == "r3") $nhk_ch[] = 7; } return $nhk_ch; } function rf_radiru_areajp($area) { $ar[0] = $area; $url_xml = rf_get_config_radiru(); if (array_key_exists($area, $url_xml) == true) { $ar[1] = $url_xml[$area]->areajp; } else { $ar[1] = ""; } return $ar; } function radiru_getarea() { global $radiru_area_1; global $radiruareafile; $fl = $radiruareafile; if (file_exists($fl)) { $area = file_get_contents($fl); $area = strtolower(trim($area)); } else { $area = $radiru_area_1; } return $area; } function radiru_putarea($area) { global $radiruareafile; $fl = $radiruareafile; $parea = strtolower($area); file_put_contents($fl, $parea, LOCK_EX); return true; } 