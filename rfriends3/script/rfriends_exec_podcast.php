<?php
 function rf_ffmpeg_pcast($url, $out, $opt) { fin_unlink($out); $optx = $opt.""; $exec_cmd = "ffmpeg $optx -i $url -acodec copy -y $out"; $ffmpeg_v = rfgw_info_ffmpeg(); echo_prn(1,""); echo_prn(1,"$ffmpeg_v"); echo_prn(1,$exec_cmd); $ret = external_program($exec_cmd); if ($ret != 0) { fin_unlink($out); return false; } if (!file_exists($out)) { return false; } if (filesize($out) == 0) { fin_unlink($out); return false; } return true; } function get_pcast($wdat,$mode) { global $tmpdir; global $podcast_timestamp; global $pcastdir; global $wget_opt; global $wget_user_agent; global $ex_podcast; $ok = 0; $bad = 0; $ex = 0; $n = count_73($wdat); $wdat2 = array(); echo_prn(2,""); echo_prn(2,"podcast count : $n"); foreach($wdat as $w) { $para = get_para($w, ""); if (is_null($para)) { echo_prn(2,"wdat error"); rf_error_log("get_pcast error"); $log = print_r($w, true); rf_error_log($log); continue; } $para[1] = $para[0]; $fromtime = $para[0]; $totime = $para[1]; $title = fn_edit($para[7]); $img = $para[9]; $prg_no = $para[11]; $job_no = $para[12]; $album = $para[15]; $dir = $job_no; if (!file_exists($dir)) { echo_prn(1,"not found ($dir)"); return false; } $fr = disk_free_space($dir); if ($fr === false) { echo_prn(1,"disk_free_space($dir) error"); return false; } $rfr = rf_disk_fmt($fr,1); $fr /= 1024*1024; if ($fr < 100) { echo_prn(2,""); echo_prn(2, "十分な空き容量がありません。($rfr < 100MB)"); return false; } $audio = $prg_no; if (($p = strpos($audio,'?')) !== false) { $audio = substr($audio,0,$p); } $ext = pathinfo($audio, PATHINFO_EXTENSION); $out = $fromtime."_".$title.".".$ext; $nametmp0 = $tmpdir.make_fn("podcasttmp"); $nametmp = $nametmp0.".$ext"; $secmes = "$album"; rf_disp_section($secmes, "+"); echo_prn(2,"date : $fromtime"); echo_prn(2,"url  : $audio"); echo_prn(2,"img  : $img"); echo_prn(2,"dir  : $dir"); echo_prn(2,"file : $out"); if (file_exists($dir.$out)) { echo_prn(2,"already exists"); $ex++; continue; } $ret = rfgw_ps($audio); if ($ret !== false) { echo_prn(2,"already downloading"); rf_error_log("already downloading $ret"); $ex++; continue; } if (file_exists($dir.$out)) { echo_prn(2,"already exists."); $ex++; continue; } start_prn(2,"podcast download start"); if ($mode == 0) { $ret = rf_wget_pcast($audio, $nametmp, "-q -t 5 --no-check-certificate"); $err = "file get error (wget)"; } else if ($mode == 1) { $fl = file_get_contents($audio); if ($fl === false) { $ret = false; $err = "file get error"; } else { $ret = file_put_contents($nametmp, $fl); $err = "file put error"; } } else if ($mode == 2) { $opt = "-q -t 5 --cipher 'DEFAULT:!DH' --no-check-certificate"; $ret = rf_wget_pcast($audio, $nametmp, $opt); $err = "file get error (wget !DH)"; } else if ($mode == 3) { $ret = rf_ffmpeg_pcast($audio, $nametmp, "-loglevel warning"); $err = "file get error (ffmpeg)"; } else { fin_unlink($nametmp); $bad++; continue; } if ($ret === false ) { echo_prn(2,$err); fin_unlink($nametmp); $wdat2[] = $w; $bad++; continue; } $sta = $para[1]; $fn = $para[2]; $fns = $para[3]; $para2 = array(); $para2[6] = $sta; $para2[7] = $fn; $para2[8] = $fns; $para2[9] = $img; for($i=0;$i<15;$i++) { if ($para[$i] == 0) $para[$i] = ''; } $para[18] = $album; $para2[18] = $album; set_tag_img($ex_podcast, $nametmp0, $ext, $para, $para2,"",""); $ret = rf_copy($nametmp,$dir.$out); fin_unlink($nametmp); if ($ret === false) { echo_prn(2,"file get error (rename)"); fin_unlink($dir.$out); $wdat2[] = $w; $bad++; continue; } if ($podcast_timestamp == 1) { $t = strtotime($fromtime); if ($t !== false) { $ret = rf_touch_tm($dir.$out,$t); if ($ret === true) { echo_prn(1,"set timestamp : ".date("Y/m/d H:i:s",$t)); } else { echo_prn(1,"set timestamp : error "); echo_prn(1,"file : ".$dir.$out); } sleep(1); } } echo_prn(2,"downloaded"); start_prn(2,"podcast download end"); $out_fn = pathinfo($out,PATHINFO_FILENAME); $ext = pathinfo($out,PATHINFO_EXTENSION); $fr = $dir.$out_fn; $to = $out_fn; echo_prn(1, ""); echo_prn(1, "rfriends-file-name : $fr.$ext"); $ret = rftrans_job($ex_podcast, $fr, $ext, $to, $para,$para2); sleep(1); $ok++; } echo_prn(2,""); echo_prn(1, str_repeat("-", 80)); echo_prn(2,"正常終了 : $ok"); echo_prn(2,"録音済   : $ex"); echo_prn(2,"異常終了 : $bad"); $cnt_allx = $ok + $ex + $bad; echo_prn(1,"計       : $cnt_allx"); echo_prn(1, str_repeat("-", 80)); return $wdat2; } function podcast_start($mes) { echo_prn(1,str_repeat("#",100)); $st_tm = start_prn(1, $mes); return $st_tm; } function podcast_end($st_tm,$mes) { $en_tm = start_prn(1, $mes); echo_prn(1,str_repeat("#",100)); echo_prn(1, ""); rf_statistics($st_tm, $en_tm); } require_once("rf_inc.php"); require_once("rf_reserve.php"); require_once("rf_podcast.php"); require_once("rf_podcast_sub.php"); require_once("rf_downloader.php"); $rfriends_mes = "ラジオ録音ツール"; $fl = file_get_contents($base.$rfriends); echo_prn(2, $fl); $ver = "1.1.1"; $start_mes = "Rfriends(pc $ver) podcast Start"; $end_mes = "Rfriends(pc $ver) podcast End"; rf_error_log($start_mes); $st_tm = podcast_start($start_mes); echo_prn(1,""); stat_prn(1,"vmstat"); echo_prn(1,""); if ($argc == 1) { $nmax = 80; $sdir = "user"; $lmt = rf_ndays_ago($podcast_days); $nd = date("Y/m/d",$lmt); echo_prn(2,"config podcast_days : $podcast_days (from $nd)"); echo_prn(2,"config podcast_cnt  : $podcast_cnt"); $flist = rf_pcast_get_flist_preset($cfgdir.$podcastdat); echo_prn(1,""); echo_prn(1,"podcast preset lists :"); $pn = 1; foreach($flist as $f) { $rss = $f['rss']; $ttl = $f['title']; if ($rss == "") continue; $ttl = fn_edit($ttl); $pf = sprintf("%5s %s",$pn,$ttl); echo_prn(1,$pf); $pn++; } $pn--; echo_prn(1,"total $pn"); echo_prn(1,""); $wdat = rf_pcast_user_auto($flist,$sdir,$nmax,$lmt,$podcast_cnt); } else if ($argc == 2) { $opt_fn = $tmpdir.$argv[1].".dat"; if (!file_exists($opt_fn)) { echo_prn(2, "rfriends_exec_podcast not found $opt_fn"); $en_tm = podcast_end($end_mes); rf_error_log($end_mes); exit(8); } $wdat = file($opt_fn); fin_unlink($opt_fn); echo_prn(2,"tmp_file : $opt_fn"); } else { echo_prn(2, "rfriends_exec_podcast parameter error"); $en_tm = podcast_end($st_tm,$end_mes); rf_error_log($end_mes); exit(8); } $wdat2 = get_pcast($wdat,0); if ($wdat2 === false) { $en_tm = podcast_end($st_tm,$end_mes); rf_error_log($end_mes); exit(8); } if (count_73($wdat2) > 0) { echo_prn(2,""); echo_prn(2,"エラー終了分を再実行"); $wdat3 = get_pcast($wdat2,3); if ($wdat3 === false) { $en_tm = podcast_end($st_tm,$end_mes); rf_error_log($end_mes); exit(8); } } $en_tm = podcast_end($st_tm,$end_mes); rf_error_log($end_mes); exit(0); 