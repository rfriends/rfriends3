<?php
 function rf_pcast_wget($url, $out, $opt) { global $wget_opt; global $wget_user_agent; global $tmpdir; $wget_user_agent = "Mozilla/5.0 (Linux; Android 11; Pixel 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.210 Mobile Safari/537.36"; fin_unlink($out); $optx = $wget_opt." --user-agent=\"".$wget_user_agent."\""; $exec_cmd = "wget $optx  \"$url\" -O $out"; $ret = external_program($exec_cmd); if ($ret != 0) { fin_unlink($out); return false; } if (!file_exists($out)) { return false; } if (filesize($out) == 0) { fin_unlink($out); return false; } return true; } function rf_rexp_get_tag($html,$tag,$class,$val,$match,$all) { if ($match == "") $match = "(.*?)"; if ($class == "") { $pat1 = ''; } else { $pat1 = ' +?'.$class.' *?= *?"'.$val.'"'; } $pat = '@< *?'.$tag.$pat1.' *?>'.$match.'< *?/ *?'.$tag.' *?>@is'; if ($all == 1) { $ret = preg_match_all($pat, $html, $script); } else { $ret = preg_match($pat, $html, $script); } if ($ret === false) { return false; } if ($ret == 0) { return false; } $scr = $script[1]; return $scr; } function rf_pcast_sel_site($program) { $opt = array( "title" => "ポッドキャスト一覧", "input_type" => 0, "page_control" => 1, "return_mes" => "終了", "input_mes" => "サイトを選択してください", "mode" => 1, "multi" => 0, "confirm" => 0, "ht_selid" => "" ); $no = rf_pctl_disp($program, $opt); $ans = $no[0]; if ($ans == "r") { return false; } if ($ans == "e") { echo_msg(2, "入力エラー"); rf_pause(); return false; } if ($ans == "z") { echo_msg(2, "リストが空です"); rf_pause(); return false; } return $ans; } function rf_pcast_get_rss_list($lists,$l) { $program_list = array(); $cnt = count_73($lists); echo_msg(2,"番組数（候補） : ".$cnt); $cnt = 0; foreach($lists as $list) { echo '.'; $list = trim($list); if (substr($list,0,1) == ";") continue; if (substr($list,0,17) == "https://audee.jp/") { $parse['rss'] = $list; $parse['title'] = "audee"; $parse['ver'] = "audee"; $parse['date'] = ""; $parse['pgm'] = "audee"; $parse['href'] = $list; $program_list[] = $parse; $cnt++; continue; } $parse = rf_pcast_info_rss($list,$l); if ($parse === false) continue; $title = $parse['title']; $count = $parse['count']; $dt = $parse['date']; $flag = 0; if ($title != "" && $count > 0) $flag = 1; $parse['rss'] = $list; $parse['name'] = $title; $parse['flag'] = $flag; $program_list[] = $parse; $cnt++; } echo_msg(2,""); if ($cnt <= 0) return $program_list; foreach ($program_list as $pl => $val) { $sort[$pl] = $val['date']; } array_multisort($sort, SORT_DESC, $program_list); return $program_list; } function rf_pcast_get_rss($list,$l,$pname) { $list = trim($list); if (substr($list,0,17) == "https://audee.jp/") { $parse['rss'] = $list; $parse['title'] = $pname; $parse['ver'] = "audee"; $parse['date'] = ""; $parse['pgm'] = $pname; $parse['href'] = $list; } else { $parse = rf_pcast_info_rss($list,$l); if ($parse === false) return false; $title = $parse['title']; $count = $parse['count']; $dt = $parse['date']; $flag = 0; if ($title != "" && $count > 0) $flag = 1; $parse['rss'] = $list; $parse['name'] = $title; $parse['flag'] = $flag; } $program_list = array(); $program_list[] = $parse; return $program_list; } function rf_pcast_info_rss($rss,$l) { if ($rss == "") return false; $parse = array(); $str = @file_get_contents($rss); if ($str === false) return false; $rssdata = rf_simplexml_load_string($str); if ($rssdata === false) return false; $ver = ""; if (isset($rssdata->entry)) { $parse['ver'] = "atom"; $parse['title'] = (string)$rssdata->title; $parse['link'] = (string)$rssdata->link->attributes()->href; $parse['count'] = count_73($rssdata->entry); } elseif (isset($rssdata->item)) { $parse['ver'] = "rss1.0"; $parse['title'] = (string)$rssdata->channel->title; $parse['link'] = (string)$rssdata->channel->link; $parse['desc'] = (string)$rssdata->channel->description; $dc = $item->children('http://purl.org/dc/elements/1.1/'); $date = (string)$dc->date; $parse['lang'] = strtolower((string)$dc->language); $parse['image'] = ""; $parse['count'] = count_73($rssdata->item); } elseif (isset($rssdata->channel->item)) { $lang = strtolower((string)$rssdata->channel->language); if ($l != "") { if ($lang != $l) return false; } $parse['ver'] = "rss2.0"; $t = trim(strip_tags((string)$rssdata->channel->title)); $t = str_replace(array("\r","\n"),'',$t); $parse['title'] = $t; $parse['link'] = (string)$rssdata->channel->link; $parse['desc'] = trim(strip_tags((string)$rssdata->channel->description)); $parse['lang'] = $lang; $parse['image'] = (string)$rssdata->channel->image->url; $parse['count'] = (int)count_73($rssdata->channel->item); $d = (string)$rssdata->channel->item[0]->pubDate; $parse['date'] = date("YmdHis",strtotime($d)); } else { return false; } if ($parse['ver'] != "rss2.0") return false; return $parse; } function rf_pcast_info_rss_new($rss) { $lists = array(); $doc = url2dom($rss); if ($doc === false) return $lists; $ns = 'http://www.itunes.com/dtds/podcast-1.0.dtd'; foreach ($doc->getElementsByTagName('item') as $item) { $title = $item->getElementsByTagName('title') ->item(0)->nodeValue; $link = $item->getElementsByTagName('link') ->item(0)->nodeValue; $pubDate = $item->getElementsByTagName('pubDate') ->item(0)->nodeValue; $enclosure = $item->getElementsByTagName('enclosure') ->item(0)->getAttribute('url'); $image = $item->getElementsByTagNameNS($ns,'image') ->item(0)->getAttribute('href'); $lists[] = array ( 'title' => $title, 'link' => $link, 'pubDate' => $pubData, 'enclosure' => $enclosure, 'image' => $image ); } return $lists; } function rf_pcast_info_rss_item($item) { $ns = 'http://www.itunes.com/dtds/podcast-1.0.dtd'; $title = $item->getElementsByTagName('title') ->item(0)->nodeValue; $link = $item->getElementsByTagName('link') ->item(0)->nodeValue; $pubDate = $item->getElementsByTagName('pubDate') ->item(0)->nodeValue; $enclosure = $item->getElementsByTagName('enclosure') ->item(0)->getAttribute('url'); $image = $item->getElementsByTagNameNS($ns,'image') ->item(0)->getAttribute('href'); $list = array ( 'title' => $title, 'link' => $link, 'pubDate' => $pubData, 'enclosure' => $enclosure, 'image' => $image ); return $list; } function rf_pcast_src_pgm($program_list) { $kw = echo_input(2, "キーワードを入力してください(end=ret) : "); if ($kw == "") { return false; } echo_msg(2, ""); echo_msg(2, "キーワード : \"$kw\""); echo_msg(2, ""); $result = preg_grep("/$kw/i",array_column($program_list,'pgm')); if (count_73($result) == 0) return 0; $keys = array_keys($result); $n = 0; foreach($result as $key => $val) { $n++; echo_msg(2, "$n. $val"); } echo_msg(2, ""); $ans0 = echo_ask(2, "番組を選択(1-$n): "); if ($ans0 == "" || $ans0 == "R" || $ans0 == "r") { return 0; } echo_msg(2, ""); $nox = rfmenu_check_range($ans0,1,$n); if ($nox === false) return 0; $key = $keys[$nox-1]; if ($key === false) return false; $pgm = $program_list[$key]; return $pgm; } function rf_pcast_get_pgm($program_list,$pgm) { echo_msg(2,"PCでは配信されていないものもあります。"); $lists = $pgm['brand']; $flist = array(); foreach($lists as $list) { $title = $list['title']; $id = $title; $ttl = $title; $flist[] = array('val' => $id,'title' => $ttl); } $opt = array( "title" => "Audeeリスト一覧", "input_type" => 0, "page_control" => 1, "return_mes" => "戻る", "input_mes" => "リストを選択してください", "mode" => 1, "multi" => 0, "confirm" => 0, "ht_selid" => "", ); echo_msg(2,""); $no = rf_pctl_disp($flist, $opt); $ans0 = $no[0]; if ($ans0 == "r") { return false; } $id = $flist[$ans0 - 1]['val']; echo_msg(2,"$id"); $ids = array_column($program_list,'id'); $ans = array_keys($ids,$id); $plist2 = array(); foreach($ans as $no) { $plist = $program_list[$no]; $plist2[] = array('title'=> $plist['pgm'],'pgm'=> $plist['pgm'],'href'=>$plist['href']); } $opt = array( "title" => "Audee podcast一覧", "input_type" => 0, "page_control" => 1, "return_mes" => "戻る", "input_mes" => "podcastを選択してください", "mode" => 1, "multi" => 0, "confirm" => 1, "ht_selid" => "" ); echo_msg(2,""); $no = rf_pctl_disp($plist2, $opt); $ans0 = $no[0]; if ($ans0 == "r") { return false; } ;print_r($ans0); return $plist2[$ans0-1]; } function rf_pcast_select_episode($lists,$pname,$rss) { global $cfgdir; global $podcastdat; global $multi_sw; $pcastfile = $cfgdir.$podcastdat; $pcast_reg = rf_pcast_add_user_preset_test($pcastfile,$rss); if ($pcast_reg === true) { $rmsg = "戻る"; } else { $rmsg = "登録"; } $lists_n = count_73($lists); $result = array(); while (1==1) { echo_msg(2,""); echo_msg(2, "番組名 : $pname"); echo_msg(2, "rss    : $rss"); $opt = array( "title" => "エピソード一覧", "input_type" => 1, "page_control" => 1, "return_mes" => $rmsg, "input_mes" => "エピソードを選択してください", "mode" => 1, "multi" => $multi_sw, "confirm" => 1, "ht_selid" => "" ); echo_msg(2,""); $no = rf_pctl_disp($lists, $opt); $ans = $no[0]; if ($ans == "r") { if ($rss == "") return false; if ($pcast_reg === true) return false; $ans = echo_yesno(2, "ユーザプリセットに登録しますか? (y/N): "); if ($ans == "y" || $ans == "Y") { file_put_contents($pcastfile,"$pname,$rss\n",FILE_APPEND); } return false; } if ($ans == "e") { echo_msg(2, "入力エラー"); continue; } if ($ans == "z") { echo_msg(2, "リストが空です"); rf_pause(); return false; } break; } foreach($no as $n) { $result[] = $lists[$n-1]; } return $result; } function rf_pcast_mp3_download($n,$dir,$sdir,$pdir,$mp3_list,$nmax,$art,$wgetopt) { global $pcastdir; global $scrdir; global $DS; @mkdir($pcastdir); @mkdir($pcastdir.$sdir); @mkdir($dir); if (is_dir($dir) === false) { echo_msg(2, "make dir error : $dir"); return false; } $wdat = array(); foreach($mp3_list as $list) { $name = $list["name"]; $name = fn_edit($name); $dt0 = $list["date"]; $dt = date("Ymd",$dt0); $mp3 = $list["mp3"]; $img = $list["image"]; if ($img == "") $img = 0; $album = $pdir; $wdat[] = rf_make_wdata($dt,0,0,0,0,0,0,$name,0,$img,0,$mp3,$dir,0,0,$album,0,0,$album); } $opt_fn = make_fn("podcast"); rf_put_wdat_all_tmpdir($opt_fn, $wdat); $nn = count_73($wdat); $nam = "rfriends_exec_podcast"; $opt = "12 \"$opt_fn\" "; $ex = "ex_rfriends"; rfgw_batsh_sub($scrdir, $ex, $opt, 1, 1); echo_msg(2, ""); echo_msg(2, "$nn 件のダウンロード処理を開始しました"); echo_msg(2, "処理はバックグラウンドで行われます"); return true; } function rf_pcast_get_audee_keylist($url,$key) { $xmlObject = url2xml($url); $q = "//ul[contains(@class, 'list-program')]//a[@data-key='$key']"; $result = $xmlObject->xpath($q); $program_list = array(); foreach($result as $val) { $href = (string)$val->attributes()->href;; $p = (string)$val->p; $p = utf8mac2utf8($p); $program_list[] = array('title' => $p,'val' => $href); } return $program_list; } function rf_pcast_get_audee_list($url) { $xmlObject = url2xml($url); $result = $xmlObject->xpath('//ul[contains(@class, "list-program")]/li/a'); $program_list = array(); foreach($result as $val) { $href = (string)$val->attributes()->href; $id = (string)$val->attributes()->id; $datakey = (string)$val->attributes()->{'data-key'}; $p = (string)$val->p; $p = utf8mac2utf8($p); $program_list[] = array('id' => $datakey,'pgm' => $p,'href' => $href); } return $program_list; } function rf_pcast_get_audee_info($url) { $program = ""; $title = ""; $tim = 0; $jpg = "/images/rfriends.png"; $mp3 = ""; $xmlObject = url2xml($url); if ($xmlObject === false) return false; $result = $xmlObject->xpath('//div[@class="box-detail-wrapper"]//script'); if ($result == null || $result === false) return false; $play = (string)$result[0]; $mp3 = ""; $ret = preg_match('/http(.*)mp3/', $play,$ans); if ($ret == 1) { $mp3 = $ans[0]; } $result = $xmlObject->xpath('//div[@class="box-detail-wrapper"]//div[@class="box-visual"]/img'); if ($result == null || $result === false) return false; $jpg = (string)$result[0]->attributes()->src; $result = $xmlObject->xpath('//div[@class="area-cmn-detail"]//div[@class="ttl-inner"]'); if ($result == null || $result === false) return false; $title = (string)$result[0]; $title = trim($title); $result = $xmlObject->xpath('//div[@class="area-cmn-detail"]//time'); if ($result == null || $result === false) return false; $tim = (string)$result[0]; $p = strpos($tim,'('); if ($p !== false) { $tim = substr($tim,0,$p); } $result = $xmlObject->xpath('//div[@class="box-program-content"]//a'); if ($result == null || $result === false) return false; $program = (string)$result[0]; $program = trim($program); $list['program'] = fn_edit($program); $list['name'] = fn_edit($title); $list['date'] = strtotime($tim); $list['image'] = $jpg; $list['mp3'] = $mp3; return $list; } function rf_pcast_get_google_result($html) { $pat = '@<script +?nonce=".*?" *?>AF_initDataCallback.(.*?).;</script>@is'; $ret = preg_match($pat, $html, $script); if ($ret === false) { return null; } if ($ret == 0) { return null; } $scr = $script[1]; $scrn = strlen($scr); if ($scrn < 300) return null; $scr1 = substr($scr,0,100); $scr2 = substr($scr,100,$scrn-150); $scr3 = substr($scr,$scrn-50); $scr1 = str_replace("key:", '"key":', $scr1); $scr1 = str_replace("'ds:0'", '"ds:0"', $scr1); $scr1 = str_replace("isError:",'"isError":',$scr1); $scr1 = str_replace("hash:", '"hash":', $scr1); $scr1 = str_replace("'1'", '"1"', $scr1); $scr1 = str_replace("data:", '"data":', $scr1); $scr3 = str_replace("sideChannel:",'"sideChannel":',$scr3); $scr = $scr1.$scr2.$scr3; $result = json_decode($scr,true); if ($result === null) return null; return $result; } function rf_pcast_get_google_recommend($result) { $data1 = array(); if (isset( $result["data"][0])) { $data1 = $result["data"][0]; } $data = array(); foreach($data1 as $d) { foreach($d[1] as $d2) { if (isset($d2[3][0]) == false) continue; $data[] = $d2[3]; } } return $data; } function rf_pcast_get_google_normal($result) { $data0 = array(); if (isset( $result["data"][1][0][1][0][2])) { $data0 = $result["data"][1][0][1][0][2]; } $data1 = array(); if (isset( $result["data"][1][1][1][0][1][0])) { $data1 = $result["data"][1][1][1][0][1][0]; } $data2 = array(); if (isset( $result["data"][1][2][1])) { $data2 = $result["data"][1][2][1]; } $count = count_73($data2); $data3 = array(); for ($i=0;$i<$count;$i++) { $data3[] = $data2[$i][3]; } $data = array_merge($data0,$data1,$data3); return $data; } function rf_pcast_user_select_program($program_list,$mname) { $flist = array(); foreach($program_list as $list) { $flag = $list['flag']; $count = $list['count']; $title = $list['title']; $url = $list['rss']; $dt = substr($list['date'],0,8); $err = ""; if ($flag == 0) $err = "[error] "; $mes = sprintf("%s (%4d) %s%s", $dt,$count,$err,$title); $flist[] = $mes; } $opt = array( "title" => "ポッドキャスト一覧($mname)", "input_type" => 0, "page_control" => 1, "return_mes" => "終了", "input_mes" => "ポッドキャストを選択してください", "mode" => 0, "multi" => 0, "confirm" => 1, "ht_selid" => "" ); while(1==1) { echo_msg(2,""); $no = rf_pctl_disp($flist, $opt); $ans = $no[0]; if ($ans == "r") { return false; } if ($ans == "e") { echo_msg(2, "入力エラー"); rf_pause(); continue; } if ($ans == "z") { echo_msg(2, "リストが空です"); rf_pause(); return false; } break; } $sel = $ans -1; return $sel; } function rf_pcast_user_get_program($pgm,$nmax,$mode) { $flag = $pgm['flag']; $count = $pgm['count']; $title = $pgm['title']; $url = $pgm['rss']; $desc = $pgm['desc']; if ($mode == 0) echo_msg(2,html_entity_decode($desc)); if ($count == 0) { echo_msg(2,"エピソードがありません。"); return false; } $xml = @file_get_contents($url); if ($xml === false) return false; $rssdata = rf_simplexml_load_string($xml); if ($rssdata === false) return false; $image = (string)$rssdata->channel->image->url; $pos = strpos($image,'?'); if ($pos !== false) { $image = substr($image,0,$pos); } $flist2 = array(); $cnt = 0; foreach($rssdata->channel->item as $item) { $cnt++; if ($cnt > $nmax) break; if ($mode == 0) echo '.'; $image_s = ""; if ($image_s == '') $image_s = $image; $encurl = ""; foreach($item->enclosure as $enc) { $enct = (string)$enc['type']; $encu = (string)$enc['url']; if (strpos($enct,"audio") === false) continue; $encurl = $encu; $enctyp = $enct; break; } if ($encurl == "") continue; $title2 = rf_stradjust(trim($item->title),$nmax); $date = date("Ymd",strtotime($item->pubDate)); $mes = "$date $title2 $encurl $enctyp $image_s"; $flist2[] = $mes; } rsort($flist2); $flist3 = array(); $no = 0; foreach($flist2 as $list) { $no++; $parts = explode(' ',$list); $dt = $parts[0]; $name = $parts[1]; $title = "$dt $name"; $url = $parts[2]; $typ = $parts[3]; $img = $parts[4]; $flist3[] = array('no'=>$no,'title'=>$title,'name' => $name,'date'=>$dt,'mp3'=>$url,'image'=>$img); } return $flist3; } function ad_get_dt($html) { $ret = rf_rexp_get_tag($html,"time","class","txt-date-01","",0); if ($ret === false) { return "19700101"; } $txt = trim($ret); $txt2 = explode(" ",$txt); $dt = strtotime($txt2[0]); $dt = date("Ymd",$dt); return $dt; } function ad_get_jpg($html) { $jpg = ""; $tm = 'https://s3-ap-northeast-1.amazonaws.com/park-s3.gsj.mobi/contents/'; $ans2 = preg_grep("@$tm@",$html); if ($ans2 === false) { return $jpg; } foreach($ans2 as $ans21) { $ans3 = strstr($ans21,$tm); $ans4 = explode(" ",$ans3); if (count_73($ans4)> 0) { $jpg = str_replace('"/>','',$ans4[0]); } break; } return $jpg; } function ad_get_voice($html) { $pattern = '@<script[^>]type="text/javascript">.*?playlist *?= *?\[(.*?)\]@is'; $ret = preg_match($pattern, $html, $script); if ($ret === false) return false; if ($ret == 0) return false; $txt = trim($script[1]); $txt = str_replace(" ","",$txt); $txt = str_replace(',time_length:',',"time_length":',$txt,$count); if ($count > 1) { $txt2 = explode(",{",$txt); $cnt = count_73($txt2); for($i=1;$i<$cnt;$i++) { $txt2[$i]= "{".$txt2[$i]; } } else { $txt2 = array(); $txt2[0] = $txt; } $json = array(); $cnt = count_73($txt2); for ($i=0;$i<$cnt;$i++) { $j = json_decode($txt2[$i],true); if ($j != null) $json[] = $j; } if (count_73($json) <= 0) return false; return $json; } function ad_get_program($url,$n) { $pattern1 = '@<div +?class="box-article-item">(.*?)</div>@is'; $pattern2 = '@<a +?href="(.*?)" @is'; $pattern3 = '@<p .*?>(.*?)</p>@is'; $pattern4 = '@<span .*?class="cat-cmn cat-02">.*?(音声).*?</span>@is'; $lists = array(); $html = @file_get_contents($url); if ($html === false) { return $lists; } $ret1 = rf_rexp_get_tag($html,"div","class","box-article-item","",1); if ($ret1 === false) return $lists; foreach($ret1 as $scr) { $ret4 = rf_rexp_get_tag($scr,"span","class","cat-cmn cat-02"," *?(音声) *?",0); if ($ret4 === false) continue; $ret2 = preg_match($pattern2, $scr, $scr2); $ret3 = preg_match($pattern3, $scr, $scr3); $href = trim((string)$scr2[1]); $pgm = trim((string)$scr3[1]); $ids = explode("/",$href); $ids_n = count_73($ids); if ($ids_n < 5) continue; $id = $ids[$ids_n - 1]; $lists[$id] = rf_stradjust($pgm,0); if (count_73($lists) >= $n) break; } return $lists; } function ad_set_tag($usrdir,$name,$dt,$cnt) { $namemp3 = $dt.$name.".mp3"; $namejpg = $dt.$name.".jpg"; $tag_ar = array(); $tag_ar["title"] = "abc"; $tag = ""; foreach ($tag_ar as $key => $val) { $tagval = " --$key \"$val\""; $tag .= $tagval; } $exec_cmd = "AtomicParsley $namemp3 $tag --overWrite"; $ret = external_program_null($exec_cmd); if ($ret != 0) { echo_msg(2, "add_tag error"); } return; } function ad_get_episode($url,$audee_program,$mode) { $lists = ad_get_program($url,10); $lists_n = count_73($lists); if ($mode == 0 && $lists_n >= 9) { $tagids = ad_get_tagid($lists,$audee_program); $tagid = ad_select_tagid($tagids); if ($tagid !== false) { echo_msg(2, "エピソード検索中....."); $lists = ad_get_voice_list($tagid,$lists); } else { echo_msg(2, "関連タグが欠如しているため、全エピソードを検索できません。"); echo_msg(2, "検索可能な９個の最新エピソードのみ処理します。"); } } krsort($lists); $flists = array(); $no = 0; foreach($lists as $key => $list) { $no++; $list = rf_stradjust($list,0); $name = $list; $flists[] = array('no'=>$no, 'key'=>$key,'title'=>$list,'name'=>$name); } return $flists; } function ad_get_program_date($tagid,$y,$sm,$sd,$em,$ed) { $url = 'https://audee.jp/search/result?keyword=' .'&tag_id%5B%5D='.$tagid .'&search_type=5&station_id=' .'&start_year='.$y .'&start_month='.$sm .'&start_day='.$sd .'&end_year='.$y .'&end_month='.$em .'&end_day='.$ed; $lists = ad_get_program($url,100); return $lists; } function ad_get_program_kw($kw) { $url = 'https://audee.jp/search/result?keyword='.$kw; $lists = ad_get_program($url,100); return $lists; } function ad_get_voice_list($tagid,$lists) { $y = date("Y",time()) - 2010; for ($i= 0;$i<=$y;$i++) { $j = 2010 + $i; $lists2 = ad_get_program_date($tagid,$j, 1, 1,12,31); $n = count_73($lists2); if ($n == 0) { echo " "; continue; } else if ($n < 30) { echo ","; $lists += $lists2; continue; } $lists2 = ad_get_program_date($tagid,$j, 1, 1, 5, 1); $n = count_73($lists2); if ($n >= 30) { echo "!"; $lists += ad_get_program_date($tagid,$j, 1, 1, 1,15); $lists += ad_get_program_date($tagid,$j, 1,16, 2, 1); $lists += ad_get_program_date($tagid,$j, 2, 2, 2,15); $lists += ad_get_program_date($tagid,$j, 2,16, 3, 1); $lists += ad_get_program_date($tagid,$j, 3, 2, 3,15); $lists += ad_get_program_date($tagid,$j, 3,16, 4, 1); $lists += ad_get_program_date($tagid,$j, 4, 2, 4,15); $lists += ad_get_program_date($tagid,$j, 4,16, 5, 1); } else if ($n > 0) { echo "."; $lists += $lists2; } else { echo " "; } $lists2 = ad_get_program_date($tagid,$j, 5, 2, 9, 1); $n = count_73($lists2); if ($n >= 30) { echo "!"; $lists += ad_get_program_date($tagid,$j, 5, 2, 5,15); $lists += ad_get_program_date($tagid,$j, 5,16, 6, 1); $lists += ad_get_program_date($tagid,$j, 6, 2, 6,15); $lists += ad_get_program_date($tagid,$j, 6,16, 7, 1); $lists += ad_get_program_date($tagid,$j, 7, 2, 7,15); $lists += ad_get_program_date($tagid,$j, 7,16, 8, 1); $lists += ad_get_program_date($tagid,$j, 8, 2, 8,15); $lists += ad_get_program_date($tagid,$j, 8,16, 9, 1); } else if ($n > 0) { echo "."; $lists += $lists2; } else { echo " "; } $lists2 = ad_get_program_date($tagid,$j, 9, 2,12,31); $n = count_73($lists2); if ($n >= 30) { echo "!"; $lists += ad_get_program_date($tagid,$j, 9, 2, 9,15); $lists += ad_get_program_date($tagid,$j, 9,16,10, 1); $lists += ad_get_program_date($tagid,$j,10, 2,10,15); $lists += ad_get_program_date($tagid,$j,10,16,11, 1); $lists += ad_get_program_date($tagid,$j,11, 2,11,15); $lists += ad_get_program_date($tagid,$j,11,16,12, 1); $lists += ad_get_program_date($tagid,$j,12, 2,12,15); $lists += ad_get_program_date($tagid,$j,12,16,12,31); } else if ($n > 0) { echo "."; $lists += $lists2; } else { echo " "; } } echo "\n"; return $lists; } function ad_get_mp3_list($lists,$nmax,$mode) { $mp3_list = array(); foreach($lists as $pgm) { $id = $pgm['key']; $no = $pgm['no']; if ($mode == 0) echo "."; $href = "https://audee.jp/voice/show/".$id; $html = @file_get_contents($href); if ($html === false) { continue; } $val = ad_get_voice($html); if ($val === false) continue; $dt = ad_get_dt($html); $image = ""; $title = rf_stradjust($pgm['title'],$nmax); $name = rf_stradjust($pgm['name'],$nmax); $cnt = count_73($val); if ($cnt == 1) { $mp3 = $val[0]["voice"]; $list = array('no'=>$no,'title'=>$title,'name'=>$name, 'date'=>$dt, 'mp3'=>$mp3, 'image'=>$image); $mp3_list[] = $list; } else { for ($i=0;$i<$cnt;$i++) { $mp3 = $val[$i]["voice"]; $i2 = $i+1; $title2 = $title."-".$i2; $name2 = $name. "-".$i2; $list = array('no'=>$no,'title'=>$title2,'name'=>$name2, 'date'=>$dt, 'mp3'=>$mp3, 'image'=>$image); $mp3_list[] = $list; } } } if ($mode == 0) echo_msg(2, ""); return $mp3_list; } function ad_get_mp3_list2($lists,$nmax,$mode) { $mp3_list = array(); foreach($lists as $pgm) { $id = $pgm['key']; $no = $pgm['no']; if ($mode == 0) echo "."; $href = "https://audee.jp/voice/show/".$id; $list0 = rf_pcast_get_audee_info($href); if ($list0 === false) continue; $list = array(); $list["name"] = $list0['name']; $list["date"] = date("YmdHis",$list0['date']); $list["mp3"] = $list0['mp3']; $list["dir"] = ""; $list["image"] = $list0['image']; $mp3_list[] = $list; } if ($mode == 0) echo_msg(2, ""); return $mp3_list; } function ad_get_tagid($voices,$program_name) { $lists = array(); if (count_73($voices) == 0) return $lists; $success = 0; foreach($voices as $id => $pgm) { $url2 = "https://audee.jp/voice/show/".$id; $pattern1 = '@<div +?class="mod-tag">(.*?)</div>@is'; $pattern2 = '@tag_id%5B0%5D=(.*?)".*?<span>(.*?)</span>@is'; $html = @file_get_contents($url2); if ($html === false) { continue; } $ret1 = rf_rexp_get_tag($html,"div","class","mod-tag","",0); if ($ret1 === false) continue; $ret2 = preg_match_all($pattern2,$ret1,$scr); if ($ret2 === false) continue; if ($ret2 == 0) continue; $success = 1; break; } if ($success == 0) return $lists; $n = count_73($scr[1]); for($i=0;$i<$n;$i++) { $id = $scr[1][$i]; $pgm = $scr[2][$i]; $lists[] = array("tag" => $id, "name" => $pgm); } $program_name = trim($program_name); $program_name = mb_convert_kana($program_name,"asK"); $program_name = fn_edit($program_name); $lists2 = array(); foreach($lists as $val) { $n++; $tagname = $val['name']; $tagname = trim($tagname); $tagname = mb_convert_kana($tagname,"asK"); $tagname = fn_edit($tagname); if ($program_name == $tagname) { $lists2 = array(); $lists2[] = $val; return $lists2; } $lists2[] = $val; } $n = count_73($lists2); if ($n == 0) return $lists; return $lists2; } function ad_select_tagid($tagids) { echo_msg(2, ""); $tag_n = count_73($tagids); if ($tag_n == 0) { return false; } if ($tag_n > 1 ) { $n = 0; foreach($tagids as $val) { $n++; $tagname = $val['name']; echo_msg(2, "$n. $tagname"); } echo_msg(2, ""); echo_msg(2, "番組名と同一のタグが存在しません。"); echo_msg(2, "番組名と最も近いものを選択してください。"); echo_msg(2, ""); $ans0 = echo_ask(2, "選択(1-$n): "); if ($ans0 == "" || $ans0 == "R" || $ans0 == "r") { return false; } echo_msg(2, ""); $nox = rfmenu_check_range($ans0,1,$n); if ($nox === false) { return false; } } else { $nox = 1; } $tagid = $tagids[$nox-1]['tag']; $tagname = $tagids[$nox-1]['name']; return $tagid; } function rf_radiko_station_data() { global $scrdir; $dat = $scrdir."radikostation.dat"; $lists = file($dat); $station = array(); foreach($lists as $list) { if (substr($list,0,1) == ';') continue; $parts = explode(',',$list); if (count_73($parts) < 2) continue; $sta = trim($parts[0]); $cnv = trim($parts[1]); if ($cnv == "") $cnv = $sta; $station[$sta] = $cnv; } return $station; } function rf_radiko_station_convert($station,$sta) { if (array_key_exists($sta,$station) === false) { return $sta; } $sta2 = $station[$sta]; return $sta2; } function rf_radiko_station_list($ty) { $lists = array(); $url = "https://radiko.jp/index/"; $xmlObject = url2xml($url); if ($xmlObject === false) { echo_msg(2,"url2xml error"); return $lists; } if ($ty == 0) { $q = '//h2[@class="heading-lv02-02"]'; $result = $xmlObject->xpath($q); if ($result == null || $result === false) { echo_msg(2,"xpath error"); return $lists; } $cnt1 = count_73($result); if ($cnt1 < 1) { echo_msg(2,"result count 0"); return $lists; } foreach($result as $r) { $area = (string)$r; $lists[] = array('title'=>$area,'val'=>$area); } return $lists; } $q = '//div[@class="content__section section"]'; $result = $xmlObject->xpath($q); if ($result == null || $result === false) { echo_msg(2,"xpath error"); return $lists; } $cnt1 = count_73($result); if ($cnt1 < 1) { echo_msg(2,"result count 0"); return $lists; } $station = rf_radiko_station_data(); foreach($result as $r) { $area = (string)$r->h2; $result2 = $r->ul->li; foreach($result2 as $r2) { $title = (string)$r2->a; $val = rf_radiko_station_convert($station,$title); $lists[$area][] = array('title'=>$title,'val'=>$val); } } return $lists; } function rf_applepodcasts_rss($id) { global $cfgdir; global $scrdir; global $podcastdat; $url = "https://itunes.apple.com/lookup?entity=podcast&id=$id"; if (($json = rf_get_json($url)) === false) { return false; } $list = @json_decode($json); if (is_null($list)) return false; $feed = $list->results[0]->feedUrl; return $feed; } function rf_applepodcasts_search($keyword,$limit) { global $cfgdir; global $scrdir; global $podcastdat; $itunes = "https://itunes.apple.com/search?country=JP&media=podcast"; $limit2 = $limit; if (1 > $limit2) $limit2 = 1; $kw = urlencode($keyword); $url = $itunes."&limit=$limit2&term='$kw'"; $json = rf_get_json($url); if ($json === false) { return false; } $json = @json_decode($json); if (is_null($json)) return false; $results = $json->results; $cnt = count_73($results); $flist = array(); foreach($results as $result) { if (property_exists($result,'feedUrl') === false ) continue; $collectionName = $result->collectionName; $artistName = $result->artistName; $title = $collectionName.' - '.$artistName; $feedUrl = $result->feedUrl; $collectionName = str_replace(",",".",$collectionName); $flist[] = array('title' => $title,'val' => $feedUrl); } return $flist; } 