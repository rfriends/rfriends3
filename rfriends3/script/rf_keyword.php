<?php
 function prt_kwcnt($kw_name,$kw) { $cnt = count_73($kw); $fmt = sprintf("%-30s : %6d",$kw_name,$cnt); echo_prn(1,$fmt); if ($cnt <= 0) return $cnt; $cnt2 = $cnt; if ($cnt2 > 20) $cnt2 = 20; for ($i=0;$i<$cnt2;$i++) { $fmt = sprintf("%4d : %s",$i+1,$kw[$i]); echo_prn(1,$fmt); } if ($cnt > 20) { echo_prn(1," ..... and more"); } return $cnt; } function merge_keyword($ex_type,$ng) { global $ex_radiko; global $ex_radiru; global $ex_timefree; global $ex_radiru_vod; global $ex_radiru_gogaku; global $keyword; global $timefree_keyword_type; global $radiru_vod_keyword_type; $kw_rk = array(); $kw_rr = array(); $kw_tf = array(); $kw_rv = array(); $kw_rg = array(); $kw_cm = array(); $key_rk = "radiko"; $key_rr = "radiru"; $key_tf = "timefree"; $key_rv = "radiru_vod"; $key_rg = "radiru_gogaku"; $key_cm = "common"; $key_al = "Keyword"; if ($ng == 1) { $key_rk .= "_ng"; $key_rr .= "_ng"; $key_tf .= "_ng"; $key_rv .= "_ng"; $key_rg .= "_ng"; $key_cm .= "_ng"; $key_al = "Keyword_ng"; } if (array_key_exists($key_cm, $keyword)) { $kw_cm = $keyword[$key_cm]; } switch ($ex_type) { case $ex_radiko: if (array_key_exists($key_rk, $keyword)) { $kw_rk = $keyword[$key_rk]; } $kwdat = array_merge($kw_rk, $kw_cm); prt_kwcnt($key_rk,$kw_rk); prt_kwcnt($key_cm,$kw_cm); break; case $ex_radiru: if (array_key_exists($key_rr, $keyword)) { $kw_rr = $keyword[$key_rr]; } $kwdat = array_merge($kw_rr, $kw_cm); prt_kwcnt($key_rr,$kw_rr); prt_kwcnt($key_cm,$kw_cm); break; case $ex_timefree: if (array_key_exists($key_tf, $keyword)) { $kw_tf = $keyword[$key_tf]; } prt_kwcnt($key_tf,$kw_tf); if (($timefree_keyword_type == 0) && array_key_exists($key_rk, $keyword)) { $kw_rk = $keyword[$key_rk]; prt_kwcnt($key_rk,$kw_rk); } prt_kwcnt($key_cm,$kw_cm); $kwdat = array_merge($kw_tf, $kw_rk, $kw_cm); break; case $ex_radiru_vod: if (array_key_exists($key_rv, $keyword)) { $kw_rv = $keyword[$key_rv]; } prt_kwcnt($key_rv,$kw_rv); if (($radiru_vod_keyword_type == 0) && array_key_exists($key_rr, $keyword)) { $kw_rr = $keyword[$key_rr]; prt_kwcnt($key_rr,$kw_rr); } prt_kwcnt($key_cm,$kw_cm); $kwdat = array_merge($kw_rv, $kw_rr, $kw_cm); break; case $ex_radiru_gogaku: if (array_key_exists($key_rg, $keyword)) { $kw_rg = $keyword[$key_rg]; } prt_kwcnt($key_rg,$kw_rg); $kwdat = $kw_rg; break; default: $kwdat = $kw_cm; break; } echo_prn(1,""); echo_prn(1,"----- keyword total : ".count_73($kwdat)); echo_prn(1,""); return $kwdat; } function merge_keyword_area($area_code, $ex_type, $ng) { global $ex_radiko; global $ex_timefree; global $keyword; global $timefree_keyword_type; global $radiru_vod_keyword_type; if ($ng == 1) return array(); $kw_rk0 = array(); $kw_tf0 = array(); $kw_cm0 = array(); $key_rk0 = "premium_radiko"; $key_tf0 = "premium_timefree"; $key_cm0 = "premium_common"; if ($ng == 1) { $key_rk0 .= "_ng"; $key_tf0 .= "_ng"; $key_cm0 .= "_ng"; } $kw_fmt = "%-25s : %5d"; if (array_key_exists($key_rk0, $keyword)) { $kw_rk0 = $keyword[$key_rk0]; } $kw_rk0_cnt = count_73($kw_rk0); $kw_rk0_dsp = sprintf($kw_fmt,$key_rk0,$kw_rk0_cnt); if (array_key_exists($key_tf0, $keyword)) { $kw_tf0 = $keyword[$key_tf0]; } $kw_tf0_cnt = count_73($kw_tf0); $kw_tf0_dsp= sprintf($kw_fmt,$key_tf0,$kw_tf0_cnt); if (array_key_exists($key_cm0, $keyword)) { $kw_cm0 = $keyword[$key_cm0]; } $kw_cm0_cnt = count_73($kw_cm0); $kw_cm0_dsp= sprintf($kw_fmt,$key_cm0,$kw_cm0_cnt); $kw_rk = array(); $kw_tf = array(); $kw_cm = array(); $key_rk = $key_rk0."_".strtolower($area_code); $key_tf = $key_tf0."_".strtolower($area_code); $key_cm = $key_cm0."_".strtolower($area_code); if (array_key_exists($key_rk, $keyword)) { $kw_rk = $keyword[$key_rk]; } $kw_rk_cnt = count_73($kw_rk); $kw_rk_dsp = sprintf($kw_fmt,$key_rk,$kw_rk_cnt); if (array_key_exists($key_tf, $keyword)) { $kw_tf = $keyword[$key_tf]; } $kw_tf_cnt = count_73($kw_tf); $kw_tf_dsp= sprintf($kw_fmt,$key_tf,$kw_tf_cnt); if (array_key_exists($key_cm, $keyword)) { $kw_cm = $keyword[$key_cm]; } $kw_cm_cnt = count_73($kw_cm); $kw_cm_dsp= sprintf($kw_fmt,$key_cm,$kw_cm_cnt); switch ($ex_type) { case $ex_radiko: prt_kwcnt($key_rk,$kw_rk); prt_kwcnt($key_cm,$kw_cm); prt_kwcnt($key_rk0,$kw_rk0); prt_kwcnt($key_cm0,$kw_cm0); $kwdat = array_merge($kw_rk, $kw_cm, $kw_rk0, $kw_cm0); break; case $ex_timefree: if ($timefree_keyword_type == 1) { prt_kwcnt($key_rk,$kw_rk); prt_kwcnt($key_cm,$kw_cm); prt_kwcnt($key_rk0,$kw_rk0); prt_kwcnt($key_cm0,$kw_cm0); $kwdat = array_merge($kw_tf, $kw_cm, $kw_tf0, $kw_cm0); } else { prt_kwcnt($key_tf,$kw_tf); prt_kwcnt($key_rk,$kw_rk); prt_kwcnt($key_cm,$kw_cm); prt_kwcnt($key_tf0,$kw_tf0); prt_kwcnt($key_rk0,$kw_rk0); prt_kwcnt($key_cm0,$kw_cm0); $kwdat = array_merge($kw_tf, $kw_rk, $kw_cm, $kw_tf0, $kw_rk0, $kw_cm0); } break; default: $kwdat = array_merge($kw_cm, $kw_cm0); break; } return $kwdat; } function get_all_keyword() { global $sec_name; global $kw_dat; global $kwdir; $keyw = array(); foreach ($sec_name as $sname) { $keyw[$sname] = array(); } foreach ($kw_dat as $key => $value) { if ($key == "station") { $flg = 1; } else { $flg = 0; } $fn2 = $kwdir.$value; $keyw_s = get_keyword_file($fn2,$flg); $keyw = array_merge($keyw,$keyw_s); } return $keyw; } function disp_keyword_list($ex_type) { global $ex_radiko; global $ex_radiru; global $ex_timefree; global $ex_radiru_vod; global $ex_radiru_gogaku; global $keyword; global $timefree_keyword_type; global $radiru_vod_keyword_type; $cnt_common = count_73($keyword["common"]); $cnt_radiko = count_73($keyword["radiko"]); $cnt_radiru = count_73($keyword["radiru"]); $cnt_timefree = count_73($keyword["timefree"]); $cnt_radiru_vod = count_73($keyword["radiru_vod"]); $cnt_radiru_gogaku = count_73($keyword["radiru_gogaku"]); $cnt_common_ng = count_73($keyword["common_ng"]); $cnt_radiko_ng = count_73($keyword["radiko_ng"]); $cnt_radiru_ng = count_73($keyword["radiru_ng"]); $cnt_timefree_ng = count_73($keyword["timefree_ng"]); $cnt_radiru_vod_ng = count_73($keyword["radiru_vod_ng"]); $cnt_radiru_gogaku_ng = count_73($keyword["radiru_gogaku_ng"]); $cnt_radiko_timerec = count_73($keyword["radiko_timerec"]); $cnt_radiru_timerec = count_73($keyword["radiru_timerec"]); $cnt_double_program_radiko = count_73($keyword["double_program_radiko"]); $cnt_double_program_radiru = count_73($keyword["double_program_radiru"]); switch ($ex_type) { case $ex_radiko: $fmt = sprintf("%-30s : %6d", "radiko_ng", $cnt_radiko_ng); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "common_ng", $cnt_common_ng); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiko", $cnt_radiko); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "common", $cnt_common); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiko_timerec", $cnt_radiko_timerec); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "double_program_radiko", $cnt_double_program_radiko); echo_prn(1, $fmt); break; case $ex_radiru: $fmt = sprintf("%-30s : %6d", "radiru_ng", $cnt_radiru_ng); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "common_ng", $cnt_common_ng); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiru", $cnt_radiru); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "common", $cnt_common); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiru_timerec", $cnt_radiru_timerec); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "double_program_radiru", $cnt_double_program_radiru); echo_prn(1, $fmt); break; case $ex_timefree: $fmt = sprintf("%-22s : %5d","timefree_keyword_type",$timefree_keyword_type); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "timefree_ng", $cnt_timefree_ng); echo_prn(1, $fmt); if ($timefree_keyword_type == 0) { $fmt = sprintf("%-30s : %6d", "radiko_ng", $cnt_radiko_ng); } $fmt = sprintf("%-30s : %6d", "common_ng", $cnt_common_ng); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "timefree", $cnt_timefree); echo_prn(1, $fmt); if ($timefree_keyword_type == 0) { $fmt = sprintf("%-30s : %6d", "radiko", $cnt_radiko); echo_prn(1, $fmt); } $fmt = sprintf("%-30s : %6d", "common", $cnt_common); echo_prn(1, $fmt); break; case $ex_radiru_vod: $fmt = sprintf("%-22s : %5d","radiru_vod_keyword_type",$radiru_vod_keyword_type); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiru_vod_ng", $cnt_radiru_vod_ng); echo_prn(1, $fmt); if ($radiru_vod_keyword_type == 0) { $cnt_radiru = count_73($keyword["radiru_ng"]); $fmt = sprintf("%-30s : %6d", "radiru", $cnt_radiru_ng); echo_prn(1, $fmt); } $fmt = sprintf("%-30s : %6d", "common_ng", $cnt_common_ng); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiru_vod", $cnt_radiru_vod); echo_prn(1, $fmt); if ($radiru_vod_keyword_type == 0) { $cnt_radiru = count_73($keyword["radiru"]); $fmt = sprintf("%-30s : %6d", "radiru", $cnt_radiru); echo_prn(1, $fmt); } $fmt = sprintf("%-30s : %6d", "common", $cnt_common); echo_prn(1, $fmt); break; case $ex_radiru_gogaku: echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiru_gogakung", $cnt_radiru_gogaku_ng); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "common_ng", $cnt_common_ng); echo_prn(1, $fmt); echo_prn(1,""); $fmt = sprintf("%-30s : %6d", "radiru_gogaku", $cnt_radiru_gogaku); echo_prn(1, $fmt); $fmt = sprintf("%-30s : %6d", "common", $cnt_common); echo_prn(1, $fmt); break; default: break; } } function rf_get_keyword_s($key,$kwdb) { if (array_key_exists($key, $kwdb)) { $data = $kwdb[$key]; if (!is_array($data)) { $data = array(); $data[] = $kwdb[$key]; } } else { $data = array(); } return $data; } function rf_get_keyword($key) { global $keyword; $data = rf_get_keyword_s($key,$keyword); return $data; } function rf_station_search($key, $val) { global $kw_station; global $keyword; if (!array_key_exists($key, $keyword)) { return false; } $kw2 = $keyword[$key]; $val2 = strtolower($val); $ret = in_array($val2, $kw2); if ($ret == true) { return true; } else { return false; } } function get_keyword_file($fn, $flg) { $keyw = array(); $sec = "unknown"; $lines = nonbom_file($fn); if (count_73($lines) == 0) { if (!file_exists($fn)) { echo_msg(1, "file not found ($fn)"); return $keyw; } $sz = @filesize($fn); if ($sz === false || $sz == 0) { echo_msg(1, "reset $fn (empty)"); fin_unlink($fn); } return $keyw; } foreach ($lines as $line) { $kw = trim($line); if (strlen($kw) == 0) { continue; } $top = substr($kw, 0, 1); if ($top == '#') { continue; } if ($top == ':') { $sec = strtolower(trim(substr($kw, 1))); continue; } if ($flg == 1) { $kw = strtolower($kw); } $keyw[$sec][] = $kw; } return $keyw; } function valid_chk($ex_type, $channel) { global $radiru_callsign_r1; global $radiru_callsign_r2; global $radiru_callsign_fm; global $radiru_ch; global $radiru_r1; global $radiru_r2; global $radiru_r3; global $radiru_area_1; global $ex_radiko; global $ex_radiru; global $ex_timefree; global $ex_radiru_vod; global $ex_radiru_gogaku; global $home_area_code; global $area_code; global $radiko_nhk_r1; global $premium; switch ($ex_type) { case $ex_radiko: case $ex_timefree: $ret = rf_station_search("radiko_ng_station", $channel); if ($ret == true) { return false; } if ($home_area_code != $area_code && $premium != 2) { $hitch = array_search($channel,$radiko_nhk_r1); if ($hitch !== false) { return false; } } break; case $ex_radiru: case $ex_radiru_vod: $ret = rf_station_search("radiru_ng_station", $channel); if ($ret == true) { return false; } break; case $ex_radiru_gogaku: break; default: return false; break; } return true; } function rf_strip_tags($inf) { $br = array("<br>","<br/>","<b>","</br>","</ br>","/ br>","/br>",); $dt2 = htmlspecialchars_decode($inf); $dt2 = strip_tags($dt2, '<br>'); $dt2 = str_ireplace($br, "", $dt2); $dt2 = str_ireplace("<", "(", $dt2); $dt2 = str_ireplace(">", ")", $dt2); return $dt2; } function rf_strip_space($inf) { $dt = mb_ereg_replace("\s", "", $inf); return $dt; } 